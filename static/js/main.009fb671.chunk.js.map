{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","isActive","cn","onClick","handleClickTab","href","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAUvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAMI,EAAWN,EAAYG,KAAOD,EAAIC,GAExC,OACE,oBACEC,UAAWG,IACT,CAAE,YAAaD,IAEjB,UAAQ,MAERE,QAAS,kBAtBA,SAACN,GAClBA,EAAIC,KAAOL,GAIfC,EAAcG,GAiBaO,CAAeP,IAC9B,cAAY,OAPd,SASE,mBAAGQ,KAAI,WAAMR,EAAIC,IAAM,UAAQ,UAA/B,SAA0CD,EAAIS,SAJzCT,EAAIC,WAUnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYY,cC1CRf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOG,EAAP,KAAoBe,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBJ,QADtB,IACsBA,OADtB,EACsBA,EAAaW,SAGnC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAbgB,SAACG,GACrBa,EAAeb,UCdnBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.009fb671.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClickTab = (tab: Tab) => {\n    if (tab.id === selectedTabId) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isActive = selectedTab.id === tab.id;\n\n            return (\n              <li\n                className={cn(\n                  { 'is-active': isActive },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n                onClick={() => handleClickTab(tab)}\n                aria-hidden=\"true\"\n              >\n                <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}